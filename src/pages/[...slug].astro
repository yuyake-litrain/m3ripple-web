---
import { type CollectionEntry, getCollection } from 'astro:content';
import BackIconButton from '../components/BackIconButton.tsx';
import Layout from '../layouts/Layout.astro';

export async function getStaticPaths() {
  const docsEntries = await getCollection('docs');
  return docsEntries.map((entry: CollectionEntry<'docs'>) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await (entry as CollectionEntry<'docs'>).render();
---

<script>
  const pathupdate = () => {
    const backBtn = document.querySelectorAll('.backButton');
    backBtn.forEach((btn) => {
      btn.addEventListener('click', () => {
        // @ts-ignore
        window.swup.navigate('/', {animation: 'down'})
      })
    })

    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry)=>{
        (document.querySelector('.topbar') as HTMLDivElement).style.background = `rgba(66 54 41 / ${1.0 - (entry.intersectionRatio + 0.6 * entry.intersectionRatio)})`;
        (document.querySelector('.topbar span') as HTMLDivElement).style.color = `rgba(255 255 255 / ${1.0 - (entry.intersectionRatio + 0.8 * entry.intersectionRatio)})`;
        })
    },
        {
            root: document.querySelector('#article_container'),
            rootMargin: "0px",
            threshold: [1, 0.95, 0.90, 0.85, 0.80, 0.75, 0.70, 0.65, 0.60, 0.5, 0.45, 0.40, 0.35, 0.30, 0.25, 0.20, 0.15, 0.10, 0.05, 0]
        }
    )

    document.querySelectorAll('.top_bigIntro').forEach((target)=> {
        observer.observe(target);
    })
}
pathupdate()

  document.addEventListener('swup:page:view', pathupdate)
</script>

<Layout>
  <div class="content">
    <div class="topbar">
      <div class='backButton'>
        <BackIconButton client:load/>
      </div>
      <span>{entry.data.title}</span>
    </div>
    <Content />
  </div>
</Layout>

<style>
.content {
  height: 100%;
  display: flex;
  flex-direction: column;
}
.topbar {
  background: transparent;
  padding: 0 20px;
  display: flex;
  align-items: center;
  gap: 1rem;
  & span{
    font-size: 1.5rem;
    font-weight: 600;
    margin: 20px 0;
    color: transparent;
    user-select: none;
  }
}
.goBack {
  font-size: 2rem;
}
@media screen and (max-width: 730px) {
  .topbar {
    padding: 0 10px;
  }
}
</style>
