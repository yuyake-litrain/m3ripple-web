---
const { frontmatter } = Astro.props;
---
<script>

const pathupdate = () => {
    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry)=>{
            (entry.target as HTMLDivElement).style.opacity = (entry.intersectionRatio - 0.6 * (1 - entry.intersectionRatio)).toString()
        })
    },
        {
            root: document.querySelector('#article_container'),
            rootMargin: "0px",
            threshold: [1, 0.95, 0.90, 0.85, 0.80, 0.75, 0.70, 0.65, 0.60, 0.5, 0.45, 0.40, 0.35, 0.30, 0.25, 0.20, 0.15, 0.10, 0.05, 0]
        }
    )
    document.querySelectorAll('.top_bigIntro').forEach((target)=> {
        observer.observe(target);
    })
}
pathupdate()

document.addEventListener('swup:page:view', pathupdate)
</script>

<article id="article_container">
    <div class="top_bigIntro">
        <span class="title_top">{frontmatter.title}</span>
    </div>
    <div class="container_read">
        <slot />
    </div>
</article>

<style is:global>
.container_read {
    max-width: 1100px;
    margin: 0 auto;
}
.top_bigIntro {
    padding-top: 80px;
    margin-bottom: 50px;
}
.title_top {
    font-size: 3rem;
    font-weight: 500;
}
#article_container {
    overflow-y: auto;
    padding: 0 60px 100px 60px;
    height: 100%;
    & video {
        width: 100%;
        border-radius: 10px;
    }
    & ul {
        padding: 0;
        & li {
            list-style-type: none;
            display: flex;
            align-items: center;
            gap: 12px;
            padding: 12px 0;
            &::before {
                content: "";
                width: 10px;
                height: 2px;
                border-radius: 100px;
                background: #373227;
            }
        }
    }
    & pre, & details pre {
        padding: 20px;
        border-radius: 20px;
        font-size: 1rem;
        line-height: 1.4rem;
        background: black;
    }
    & details summary {
        & .rcon {
            padding: 15px 20px;
            user-select: none;
            background: #373227;
        }
        list-style-type: none;
        &:hover {
            background-color: #ffffff22;
            transition: .3s;
        }
    }
    & .rcon.ripple_example {
        height: 100px;
        background: #ffffff10;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 1.5rem;
        border-radius: 20px;
        user-select: none;
        &.example_big {
            margin: 20px 0;
            height: 500px;
        }
    }
    & .rcon {
        /* Workaround(m3ripple's css modules is not working) */
        overflow: hidden;
        position: relative;
        z-index: 0;

        & .ripple {
          position: absolute;
          border-radius: 100%;
          z-index: -1;
          transform: translateX(-50%) translateY(-50%);
          pointer-events: none;
          display: flex;
          align-items: center;
          justify-content: center;
          user-select: none;
        }
        & .sparkles_canvas {
          position: absolute;
          user-select: none;
        }
    }
    a {
        color: #c2af84;
        &:active {
            text-decoration: none;
        }
    }
    & h2 {
        font-size: 2rem;
        font-weight: 500;
    }
    & p {
        line-height: 1.9rem;
        font-size: 1rem;
        color: #ffffffcc;
        padding: 0;
        margin: 0;
        & code {
            background: #423629;
            border-radius: 5px;
            padding: 3px 6px;
        }
    }
    & h3 {
        color: #f7ca9a;
        font-size: 1rem;
        font-weight: 600;
        margin-top: 30px;
    }
    & img {
        width: 100%;
        height: fit-content;
        border: 1px solid #ffffff22;
        border-radius: 25px;
        overflow: hidden;
        max-width: 700px;
        margin: 50px auto;
        display: block;
    }
}
@media screen and (max-width: 730px) {
    #article_container {
        padding: 0 20px 100px 20px;
    }
}
</style>
